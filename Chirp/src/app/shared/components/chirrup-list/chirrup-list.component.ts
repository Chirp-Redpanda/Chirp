import { Component, OnInit } from '@angular/core';
import { GetChirrupsService } from '../../services/get-chirrups.service';
import { Chirrup, Comment, Content } from '../../../core/models/chirrup';
import { CommentService } from 'src/app/features/chirrup/services/comment.service';

@Component({
  selector: 'app-chirrup-list',
  templateUrl: './chirrup-list.component.html',
  styleUrls: ['./chirrup-list.component.sass', '../chirrup-card/chirrup-card.component.sass']
})
export class ChirrupListComponent implements OnInit {
  news: Chirrup[] = []; // This will hold an array of Chirrup objects
  newCommentText: string = '';

  constructor(private getChirrupsService: GetChirrupsService, private commentService: CommentService) { }

  ngOnInit() {
    this.getChirrupsService.getNews().subscribe({
      next: (data: Chirrup[]) => { // Ensure this is typed as an array of Chirrup
        this.news = data.map((item: Chirrup) => ({ // Use parentheses for the syntax
          ...item,
          islike: false,
          showComments: false,
        }));
      },
      error: (error) => {
        console.error('There was an error!', error);
      }
    });
  }

  toggleHeartIcon(chirrup: Chirrup) { // It's better to type the parameter as Chirrup if that's what it's expected to be
    chirrup.islike = !chirrup.islike; // This will toggle the like state of the chirrup
  };

  toggleCommentIcon(chirrup: Chirrup) { // It's better to type the parameter as Chirrup if that's what it's expected to be
    chirrup.showComments = !chirrup.showComments; // This will toggle the like state of the chirrup
  }
  onSubmit(chirrup: Chirrup) {
    const newComment: Comment = {
      _id: '', // This will be generated by the backend
      publisherName: '', // Assuming default publisherName is 'Anon'
      content: {
        image: '', // Add image if available
        video: '', // Add video if available
        text: this.newCommentText, // Use the input text for the comment content
        _id: ''
      },
      publishedTime: new Date().toISOString() // Use current timestamp
    };

    this.commentService.addComment(chirrup._id, newComment).subscribe({
      next: _resp => {
        console.log("Comment post successfully");
        this.newCommentText = '';

        // After posting the comment, fetch the updated chirrups to display the new comment
        this.getChirrupsService.getNews().subscribe({
          next: (data: Chirrup[]) => {
            this.news = data.map((item: Chirrup) => ({
              ...item,
              islike: false,
              showComments: false,
            }));
          },
          error: (error) => {
            console.error('There was an error fetching chirrups!', error);
          }
        });
      },
      error: _err => console.log("Error posing new comment:", _err)
    });
  }

}
